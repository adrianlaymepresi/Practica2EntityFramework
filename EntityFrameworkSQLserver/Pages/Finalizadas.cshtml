@page
@model EntityFrameworkSQLserver.Pages.FinalizadasModel

@{
    ViewData["Title"] = "Finalizadas";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="m-0 text-light">TAREAS FINALIZADAS</h2>
        <form method="get" class="d-flex align-items-center gap-2">
            <label for="cantidadRegistrosPorPagina" class="text-light m-0 text-nowrap">Tareas por página</label>
            <input id="cantidadRegistrosPorPagina"
                   name="cantidadRegistrosPorPagina"
                   class="form-control form-control-sm"
                   type="number"
                   min="1"
                   max="99"
                   inputmode="numeric"
                   placeholder="5"
                   value="@(Model.CantidadRegistrosPorPagina)"
                   oninput="this.value = this.value.replace(/\D/g,'').slice(0,2)"
                   style="width:70px" />
            <input type="hidden" name="pagina" value="1" />
            <input type="hidden" name="q" value="@(Model.TextoBusqueda)" />
            <button type="submit" class="btn btn-sm btn-primary text-nowrap">👁️ Aplicar</button>
        </form>
    </div>

    <div class="d-flex justify-content-start align-items-center mb-3">
        <form id="formulario-busqueda" method="get" class="d-flex align-items-center gap-2">
            <label for="q" class="text-light m-0 text-nowrap">Buscar</label>
            <input id="q"
                   name="q"
                   class="form-control form-control-sm"
                   type="search"
                   value="@(Model.TextoBusqueda)"
                   placeholder="🔍 Escribe para filtrar…"
                   autocomplete="off"
                   style="width: 250px;"
                   maxlength="100" />
            <input type="hidden" name="cantidadRegistrosPorPagina" value="@(Model.CantidadRegistrosPorPagina)" />
            <input type="hidden" name="pagina" value="1" />
        </form>
    </div>

    <!-- PAGINADO (ARRIBA) -->
    <nav class="mb-3">
        <ul class="pagination justify-content-center flex-wrap gap-1">
            <li class="page-item @(Model.HasPrevPage ? "" : "disabled")">
                <a class="page-link"
                   asp-page="./Finalizadas"
                   asp-route-pagina="@(Model.PaginaActual - 1)"
                   asp-route-cantidadRegistrosPorPagina="@Model.CantidadRegistrosPorPagina"
                   asp-route-q="@(Model.TextoBusqueda)">« Anterior</a>
            </li>

            <li class="page-item @(Model.PaginaActual == 1 ? "active" : "")">
                <a class="page-link"
                   asp-page="./Finalizadas"
                   asp-route-pagina="1"
                   asp-route-cantidadRegistrosPorPagina="@Model.CantidadRegistrosPorPagina"
                   asp-route-q="@(Model.TextoBusqueda)">1</a>
            </li>

            @if (Model.PageWindowStart > 1)
            {
                <li class="page-item disabled"><span class="page-link">…</span></li>
            }

            @for (int i = Model.PageWindowStart; i <= Model.PageWindowEnd; i++)
            {
                if (i == 1) { continue; }
                <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                    <a class="page-link"
                       asp-page="./Finalizadas"
                       asp-route-pagina="@i"
                       asp-route-cantidadRegistrosPorPagina="@Model.CantidadRegistrosPorPagina"
                       asp-route-q="@(Model.TextoBusqueda)">@i</a>
                </li>
            }

            @if (Model.PageWindowEnd < Model.CantidadTotalPaginas)
            {
                <li class="page-item disabled"><span class="page-link">…</span></li>
            }

            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link"
                   asp-page="./Finalizadas"
                   asp-route-pagina="@(Model.PaginaActual + 1)"
                   asp-route-cantidadRegistrosPorPagina="@Model.CantidadRegistrosPorPagina"
                   asp-route-q="@(Model.TextoBusqueda)">Siguiente »</a>
            </li>
        </ul>
    </nav>

    <div class="card p-3" style="background:#0f1113; color:#f8f9fa; border:1px solid #2b2f33;">
        <div class="table-responsive">
            <table class="table table-bordered table-hover text-center mb-0">
                <thead>
                    <tr>
                        <th class="text-white">Nombre Tarea</th>
                        <th class="text-white">Fecha Vencimiento</th>
                        <th class="text-white">Estado</th>
                        <th class="text-white">Usuario</th>
                        <th class="text-white">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Tarea)
                    {
                        var claseEstado = item.estadoTarea switch
                        {
                            "Pendiente" => "badge bg-warning text-dark",
                            "En curso" => "badge bg-info text-dark",
                            "Finalizado" => "badge bg-success text-dark",
                            "Cancelado" => "badge bg-danger text-dark",
                            _ => "badge bg-secondary"
                        };
                        <tr>
                            <td class="text-white">@item.nombreTarea</td>
                            <td class="text-white">@item.fechaVencimientoTarea.ToString("yyyy-MM-dd")</td>
                            <td class="text-white"><span class="@claseEstado">@item.estadoTarea</span></td>
                            <td class="text-white">@item.idUsuario</td>
                            <td class="d-flex justify-content-center gap-2">
                                <button type="button" class="btn btn-sm btn-outline-warning" title="Cambiar estado (sin funcionalidad)">
                                    ⏳ Cambiar estado
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (() => {
            const formularioBusqueda = document.getElementById('formulario-busqueda');
            const campoBusqueda = document.getElementById('q');
            let temporizadorEspera;
            const esperaMilisegundos = 600;

            if (campoBusqueda) {
                campoBusqueda.focus();
                const valor = campoBusqueda.value;
                campoBusqueda.value = '';
                campoBusqueda.value = valor;
            }

            if (formularioBusqueda && campoBusqueda) {
                campoBusqueda.addEventListener('input', () => {
                    clearTimeout(temporizadorEspera);
                    temporizadorEspera = setTimeout(() => {
                        campoBusqueda.value = campoBusqueda.value
                          .replace(/[\u0000-\u001F\u007F]/g, '')
                          .slice(0, 100)
                          .trim();
                        formularioBusqueda.querySelector('input[name="pagina"]').value = "1";
                        formularioBusqueda.submit();
                    }, esperaMilisegundos);
                });
            }
        })();
    </script>
}
